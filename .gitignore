local beeEventFolder = Instance.new("Folder", game.ReplicatedStorage)
beeEventFolder.Name = "BeeEvents"

local beeEventBindable = Instance.new("BindableEvent", beeEventFolder)
beeEventBindable.Name = "OnNewBeeEvent"

-- Fake Bee Event Data (can be replaced with actual database or webhook logic)
local beeEvents = {
	{ name = "Honey Harvest", time = 10 }, -- every 10 seconds
	{ name = "Queen Bee Parade", time = 20 },
	{ name = "Buzz Bonus", time = 30 },
	{ name = "Golden Nectar Drop", time = 45 }
}

local eventIndex = 1

-- Function to trigger next bee event
local function triggerNextBeeEvent()
	local event = beeEvents[eventIndex]
	if not event then return end

	local newEvent = Instance.new("StringValue")
	newEvent.Name = event.name
	newEvent.Parent = beeEventFolder

	print("[BEE EVENT] New Event:", event.name)
	beeEventBindable:Fire(event.name) -- Notify clients or other scripts

	eventIndex += 1
	if eventIndex > #beeEvents then
		eventIndex = 1 -- Loop through events
	end

	task.delay(event.time, triggerNextBeeEvent)
end

-- Start the first event
triggerNextBeeEvent()
local beeEventFolder = game.ReplicatedStorage:WaitForChild("BeeEvents")
local beeEventBindable = beeEventFolder:WaitForChild("OnNewBeeEvent")

beeEventBindable.Event:Connect(function(eventName)
	warn("[CLIENT] Bee Event Started:", eventName)

	-- Example: Show UI message or boost plants
	local StarterGui = game:GetService("StarterGui")
	StarterGui:SetCore("ChatMakeSystemMessage", {
		Text = "üêù BEE EVENT: " .. eventName .. " is now active!";
		Color = Color3.fromRGB(255, 223, 0);
		Font = Enum.Font.SourceSansBold;
		TextSize = 22;
	})
end)
